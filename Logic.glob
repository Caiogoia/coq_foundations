DIGEST 934b68a1eed689f4936ca646b9a6471f
FLF.Logic
R99:105 LF.Tactics <> <> lib
R951:953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R984:986 Coq.Init.Datatypes <> nat ind
R994:996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R990:992 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R989:989 LF.Logic <> n var
R993:993 LF.Logic <> m var
R998:1000 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R997:997 LF.Logic <> m var
R1001:1001 LF.Logic <> n var
R1239:1241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1260:1262 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1291:1293 Coq.Init.Datatypes <> nat ind
R1297:1299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1296:1296 LF.Logic <> n var
prf 1631:1643 <> plus_2_2_is_4
R1654:1656 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1650:1652 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
def 1894:1903 <> plus_claim
R1920:1922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1916:1918 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R1932:1941 LF.Logic <> plus_claim def
prf 2105:2122 <> plus_claim_is_true
R2128:2137 LF.Logic <> plus_claim def
def 2462:2469 <> is_three
R2476:2478 Coq.Init.Datatypes <> nat ind
R2494:2496 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2493:2493 LF.Logic <> n var
R2520:2523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2517:2519 Coq.Init.Datatypes <> nat ind
R2506:2513 LF.Logic <> is_three def
def 2760:2768 <> injective
R2782:2785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2786:2786 LF.Logic <> B var
R2781:2781 LF.Logic <> A var
R2807:2807 LF.Logic <> A var
R2819:2822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2824:2826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2823:2823 LF.Logic <> x var
R2827:2827 LF.Logic <> y var
R2813:2815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2810:2810 LF.Logic <> f var
R2812:2812 LF.Logic <> x var
R2816:2816 LF.Logic <> f var
R2818:2818 LF.Logic <> y var
prf 2837:2844 <> succ_inj
R2848:2856 LF.Logic <> injective def
R2858:2858 Coq.Init.Datatypes <> S constr
R3245:3248 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3250:3253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3249:3249 LF.Logic <> A var
R3244:3244 LF.Logic <> A var
R3222:3223 Coq.Init.Logic <> eq ind
def 3838:3848 <> and_example
R3861:3864 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3857:3859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3853:3855 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3870:3872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3866:3868 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
prf 4245:4253 <> and_intro
R4277:4280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4282:4285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4287:4290 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4286:4286 LF.Logic <> A var
R4291:4291 LF.Logic <> B var
R4281:4281 LF.Logic <> B var
R4276:4276 LF.Logic <> A var
def 4596:4607 <> and_example'
R4620:4623 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4616:4618 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4612:4614 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4629:4631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4625:4627 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R4650:4658 LF.Logic <> and_intro thm
R4650:4658 LF.Logic <> and_intro thm
def 4798:4809 <> and_exercise
R4828:4830 Coq.Init.Datatypes <> nat ind
R4842:4845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4851:4854 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4847:4849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4846:4846 LF.Logic <> n var
R4856:4858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4855:4855 LF.Logic <> m var
R4838:4840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4834:4836 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R4833:4833 LF.Logic <> n var
R4837:4837 LF.Logic <> m var
R4891:4899 LF.Logic <> and_intro thm
R4891:4899 LF.Logic <> and_intro thm
R5010:5018 LF.Induction <> plus_comm thm
R5010:5018 LF.Induction <> plus_comm thm
R5010:5018 LF.Induction <> plus_comm thm
prf 5508:5519 <> and_example2
R5538:5540 Coq.Init.Datatypes <> nat ind
R5557:5560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5566:5568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5562:5564 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5561:5561 LF.Logic <> n var
R5565:5565 LF.Logic <> m var
R5548:5551 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5544:5546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5543:5543 LF.Logic <> n var
R5553:5555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5552:5552 LF.Logic <> m var
prf 5820:5832 <> and_example2'
R5851:5853 Coq.Init.Datatypes <> nat ind
R5870:5873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5879:5881 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5875:5877 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5874:5874 LF.Logic <> n var
R5878:5878 LF.Logic <> m var
R5861:5864 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5857:5859 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5856:5856 LF.Logic <> n var
R5866:5868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5865:5865 LF.Logic <> m var
prf 6160:6173 <> and_example2''
R6192:6194 Coq.Init.Datatypes <> nat ind
R6202:6205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6211:6214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6220:6222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6216:6218 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6215:6215 LF.Logic <> n var
R6219:6219 LF.Logic <> m var
R6207:6209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6206:6206 LF.Logic <> m var
R6198:6200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6197:6197 LF.Logic <> n var
prf 6588:6599 <> and_example3
R6618:6620 Coq.Init.Datatypes <> nat ind
R6632:6635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6641:6643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6637:6639 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R6636:6636 LF.Logic <> n var
R6640:6640 LF.Logic <> m var
R6628:6630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6624:6626 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6623:6623 LF.Logic <> n var
R6627:6627 LF.Logic <> m var
R6702:6713 LF.Logic <> and_exercise ex
R6702:6713 LF.Logic <> and_exercise ex
prf 7099:7103 <> proj1
R7134:7137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7138:7138 LF.Logic <> P var
R7129:7132 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7128:7128 LF.Logic <> P var
R7133:7133 LF.Logic <> Q var
prf 7275:7279 <> proj2
R7310:7313 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7314:7314 LF.Logic <> Q var
R7305:7308 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7304:7304 LF.Logic <> P var
R7309:7309 LF.Logic <> Q var
prf 7619:7628 <> and_commut
R7659:7662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7664:7667 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7663:7663 LF.Logic <> Q var
R7668:7668 LF.Logic <> P var
R7654:7657 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7653:7653 LF.Logic <> P var
R7658:7658 LF.Logic <> Q var
prf 8050:8058 <> and_assoc
R8098:8101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8102:8102 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8109:8113 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8104:8107 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8103:8103 LF.Logic <> P var
R8108:8108 LF.Logic <> Q var
R8114:8114 LF.Logic <> R var
R8086:8090 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8097:8097 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8085:8085 LF.Logic <> P var
R8092:8095 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8091:8091 LF.Logic <> Q var
R8096:8096 LF.Logic <> R var
R8457:8460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8465:8468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8447:8449 Coq.Init.Logic <> and ind
prf 9026:9034 <> eq_mult_0
R9053:9055 Coq.Init.Datatypes <> nat ind
R9072:9075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9081:9083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9077:9079 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R9076:9076 LF.Logic <> n var
R9080:9080 LF.Logic <> m var
R9063:9066 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9059:9061 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9058:9058 LF.Logic <> n var
R9068:9070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9067:9067 LF.Logic <> m var
R9298:9305 Coq.Init.Peano <> mult_n_O thm
R9298:9305 Coq.Init.Peano <> mult_n_O thm
R9298:9305 Coq.Init.Peano <> mult_n_O thm
prf 9670:9679 <> or_intro_l
R9703:9706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9708:9711 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9707:9707 LF.Logic <> A var
R9712:9712 LF.Logic <> B var
R9702:9702 LF.Logic <> A var
prf 9870:9881 <> zero_or_succ
R9898:9900 Coq.Init.Datatypes <> nat ind
R9908:9911 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9904:9906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9903:9903 LF.Logic <> n var
R9913:9915 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9912:9912 LF.Logic <> n var
R9916:9916 Coq.Init.Datatypes <> S constr
R9919:9922 Coq.Init.Peano <> pred syndef
R9924:9924 LF.Logic <> n var
prf 10086:10094 <> mult_eq_0
R10121:10124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10130:10133 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10126:10128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10125:10125 LF.Logic <> n var
R10135:10137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10134:10134 LF.Logic <> m var
R10117:10119 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10113:10115 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R10112:10112 LF.Logic <> n var
R10116:10116 LF.Logic <> m var
prf 10382:10390 <> or_commut
R10421:10425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10427:10430 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10426:10426 LF.Logic <> Q var
R10431:10431 LF.Logic <> P var
R10416:10419 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10415:10415 LF.Logic <> P var
R10420:10420 LF.Logic <> Q var
mod 11489:11493 <> MyNot
def 11508:11510 MyNot not
R11525:11528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11529:11533 Coq.Init.Logic <> False ind
R11524:11524 LF.Logic <> P var
R11556:11558 LF.Logic MyNot not def
not 11546:11546 MyNot ::type_scope:'~'_x
R11594:11597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11584:11586 LF.Logic MyNot not def
R11609:11613 LF.Logic MyNot <> mod
prf 11826:11843 <> ex_falso_quodlibet
R11871:11874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11875:11875 LF.Logic <> P var
R11866:11870 Coq.Init.Logic <> False ind
prf 12293:12311 <> not_implies_our_not
R12337:12341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12365:12365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12360:12363 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12364:12364 LF.Logic <> Q var
R12359:12359 LF.Logic <> P var
R12334:12335 Coq.Init.Logic <> ::type_scope:'~'_x not
R12336:12336 LF.Logic <> P var
prf 12687:12698 <> zero_not_one
R12703:12706 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12970:12972 Coq.Init.Logic <> not def
prf 13602:13610 <> not_False
R13616:13617 Coq.Init.Logic <> ::type_scope:'~'_x not
R13618:13622 Coq.Init.Logic <> False ind
R13641:13643 Coq.Init.Logic <> not def
prf 13682:13711 <> contradiction_implies_anything
R13736:13736 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13744:13748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13749:13749 LF.Logic <> Q var
R13738:13741 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13737:13737 LF.Logic <> P var
R13742:13742 Coq.Init.Logic <> ::type_scope:'~'_x not
R13743:13743 LF.Logic <> P var
R13813:13815 Coq.Init.Logic <> not def
prf 13872:13881 <> double_neg
R13905:13908 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13909:13909 Coq.Init.Logic <> ::type_scope:'~'_x not
R13910:13910 Coq.Init.Logic <> ::type_scope:'~'_x not
R13911:13911 LF.Logic <> P var
R13904:13904 LF.Logic <> P var
R13966:13968 Coq.Init.Logic <> not def
def 14597:14627 <> manual_grade_for_double_neg_inf
R14631:14636 Coq.Init.Datatypes <> option ind
R14642:14642 LF.Poly <> ::type_scope:x_'*'_x not
R14639:14641 Coq.Init.Datatypes <> nat ind
R14643:14648 Coq.Strings.String <> string ind
R14654:14657 Coq.Init.Datatypes <> None constr
prf 14756:14769 <> contrapositive
R14796:14796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14803:14808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14817:14817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14811:14814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14815:14815 Coq.Init.Logic <> ::type_scope:'~'_x not
R14816:14816 LF.Logic <> P var
R14809:14809 Coq.Init.Logic <> ::type_scope:'~'_x not
R14810:14810 LF.Logic <> Q var
R14798:14801 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14802:14802 LF.Logic <> Q var
R14797:14797 LF.Logic <> P var
R14854:14856 Coq.Init.Logic <> not def
R14872:14874 Coq.Init.Logic <> not def
prf 15012:15034 <> not_both_true_and_false
R15057:15059 Coq.Init.Logic <> ::type_scope:'~'_x not
R15067:15067 Coq.Init.Logic <> ::type_scope:'~'_x not
R15061:15064 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15060:15060 LF.Logic <> P var
R15065:15065 Coq.Init.Logic <> ::type_scope:'~'_x not
R15066:15066 LF.Logic <> P var
R15096:15098 Coq.Init.Logic <> not def
def 15654:15686 <> manual_grade_for_informal_not_PNP
R15690:15695 Coq.Init.Datatypes <> option ind
R15701:15701 LF.Poly <> ::type_scope:x_'*'_x not
R15698:15700 Coq.Init.Datatypes <> nat ind
R15702:15707 Coq.Strings.String <> string ind
R15713:15716 Coq.Init.Datatypes <> None constr
prf 16211:16227 <> not_true_is_false
R16242:16245 LF.Basics <> bool ind
R16259:16262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16264:16266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16263:16263 LF.Logic <> b var
R16267:16271 LF.Basics <> false constr
R16251:16254 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16250:16250 LF.Logic <> b var
R16255:16258 LF.Basics <> true constr
R16346:16348 Coq.Init.Logic <> not def
R16366:16383 LF.Logic <> ex_falso_quodlibet thm
R16366:16383 LF.Logic <> ex_falso_quodlibet thm
prf 16594:16611 <> not_true_is_false'
R16626:16629 LF.Basics <> bool ind
R16643:16646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16648:16650 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16647:16647 LF.Logic <> b var
R16651:16655 LF.Basics <> false constr
R16635:16638 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16634:16634 LF.Logic <> b var
R16639:16642 LF.Basics <> true constr
R16757:16759 Coq.Init.Logic <> not def
prf 17137:17148 <> True_is_true
R17152:17155 Coq.Init.Logic <> True ind
R17171:17171 Coq.Init.Logic <> I constr
R17171:17171 Coq.Init.Logic <> I constr
mod 17831:17835 <> MyIff
def 17850:17852 MyIff iff
R17870:17870 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17877:17882 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17889:17889 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17872:17875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17876:17876 LF.Logic <> Q var
R17871:17871 LF.Logic <> P var
R17884:17887 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17888:17888 LF.Logic <> P var
R17883:17883 LF.Logic <> Q var
R17916:17918 LF.Logic MyIff iff def
not 17902:17902 MyIff ::type_scope:x_'<->'_x
R18020:18024 LF.Logic MyIff <> mod
prf 18036:18042 <> iff_sym
R18067:18067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18075:18080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18088:18088 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18082:18086 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18081:18081 LF.Logic <> Q var
R18087:18087 LF.Logic <> P var
R18069:18073 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18068:18068 LF.Logic <> P var
R18074:18074 LF.Logic <> Q var
prf 18216:18233 <> not_true_iff_false
R18258:18262 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18250:18253 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18249:18249 LF.Logic <> b var
R18254:18257 LF.Basics <> true constr
R18264:18266 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18263:18263 LF.Logic <> b var
R18267:18271 LF.Basics <> false constr
R18343:18359 LF.Logic <> not_true_is_false thm
R18343:18359 LF.Logic <> not_true_is_false thm
prf 18637:18644 <> iff_refl
R18668:18672 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18667:18667 LF.Logic <> P var
R18673:18673 LF.Logic <> P var
prf 18768:18776 <> iff_trans
R18803:18803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18811:18815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18816:18816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18824:18829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18837:18837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18831:18835 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18830:18830 LF.Logic <> P var
R18836:18836 LF.Logic <> R var
R18818:18822 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18817:18817 LF.Logic <> Q var
R18823:18823 LF.Logic <> R var
R18805:18809 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18804:18804 LF.Logic <> P var
R18810:18810 LF.Logic <> Q var
prf 19101:19123 <> or_distributes_over_and
R19163:19167 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19151:19155 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19162:19162 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19150:19150 LF.Logic <> P var
R19157:19160 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19156:19156 LF.Logic <> Q var
R19161:19161 LF.Logic <> R var
R19168:19168 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19175:19180 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19187:19187 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19170:19173 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19169:19169 LF.Logic <> P var
R19174:19174 LF.Logic <> Q var
R19182:19185 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19181:19181 LF.Logic <> P var
R19186:19186 LF.Logic <> R var
R20102:20115 Coq.Setoids.Setoid <> <> lib
prf 20948:20953 <> mult_0
R20978:20982 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20974:20976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20970:20972 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R20969:20969 LF.Logic <> n var
R20973:20973 LF.Logic <> m var
R20988:20991 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20984:20986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20983:20983 LF.Logic <> n var
R20993:20995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20992:20992 LF.Logic <> m var
R21025:21033 LF.Logic <> mult_eq_0 thm
R21025:21033 LF.Logic <> mult_eq_0 thm
R21046:21054 LF.Logic <> eq_mult_0 thm
R21046:21054 LF.Logic <> eq_mult_0 thm
prf 21071:21078 <> or_assoc
R21118:21122 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21106:21110 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21117:21117 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21105:21105 LF.Logic <> P var
R21112:21115 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21111:21111 LF.Logic <> Q var
R21116:21116 LF.Logic <> R var
R21123:21123 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21130:21134 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21125:21128 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21124:21124 LF.Logic <> P var
R21129:21129 LF.Logic <> Q var
R21135:21135 LF.Logic <> R var
prf 21600:21607 <> mult_0_3
R21640:21644 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21636:21638 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21632:21634 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21628:21630 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21627:21627 LF.Logic <> n var
R21631:21631 LF.Logic <> m var
R21635:21635 LF.Logic <> p var
R21650:21653 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21646:21648 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21645:21645 LF.Logic <> n var
R21659:21662 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21655:21657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21654:21654 LF.Logic <> m var
R21664:21666 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21663:21663 LF.Logic <> p var
R21703:21708 LF.Logic <> mult_0 thm
R21703:21708 LF.Logic <> mult_0 thm
R21703:21708 LF.Logic <> mult_0 thm
R21719:21724 LF.Logic <> mult_0 thm
R21719:21724 LF.Logic <> mult_0 thm
R21719:21724 LF.Logic <> mult_0 thm
R21735:21742 LF.Logic <> or_assoc thm
R21735:21742 LF.Logic <> or_assoc thm
R21735:21742 LF.Logic <> or_assoc thm
prf 21953:21969 <> apply_iff_example
R21988:21990 Coq.Init.Datatypes <> nat ind
R22002:22005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22011:22014 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22007:22009 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22006:22006 LF.Logic <> n var
R22016:22018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22015:22015 LF.Logic <> m var
R21998:22000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21994:21996 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R21993:21993 LF.Logic <> n var
R21997:21997 LF.Logic <> m var
R22051:22056 LF.Logic <> mult_0 thm
R22051:22056 LF.Logic <> mult_0 thm
def 22935:22938 <> even
R22945:22951 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22959:22960 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22956:22958 Coq.Init.Datatypes <> nat ind
R22962:22964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22961:22961 LF.Logic <> x var
R22965:22970 LF.Induction <> double def
R22972:22972 LF.Logic <> n var
prf 22982:22993 <> four_is_even
R22997:23000 LF.Logic <> even def
R23021:23024 LF.Logic <> even def
prf 23250:23265 <> exists_example_2
R23281:23281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23301:23308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23328:23328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23309:23315 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23317:23318 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23320:23322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23319:23319 LF.Logic <> n var
R23324:23326 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23327:23327 LF.Logic <> o var
R23282:23288 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23290:23291 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23293:23295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23292:23292 LF.Logic <> n var
R23297:23299 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23300:23300 LF.Logic <> m var
R23428:23430 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23428:23430 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
prf 23709:23723 <> dist_not_exists
R23749:23752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23748:23748 LF.Logic <> X var
R23762:23762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23776:23780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23781:23783 Coq.Init.Logic <> ::type_scope:'~'_x not
R23799:23799 Coq.Init.Logic <> ::type_scope:'~'_x not
R23784:23790 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23792:23793 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23794:23795 Coq.Init.Logic <> ::type_scope:'~'_x not
R23796:23796 LF.Logic <> P var
R23798:23798 LF.Logic <> x var
R23773:23773 LF.Logic <> P var
R23775:23775 LF.Logic <> x var
R23862:23864 Coq.Init.Logic <> not def
prf 24054:24067 <> dist_exists_or
R24095:24098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24094:24094 LF.Logic <> X var
R24108:24108 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24129:24134 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24109:24115 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24117:24118 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24122:24125 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24119:24119 LF.Logic <> P var
R24121:24121 LF.Logic <> x var
R24126:24126 LF.Logic <> Q var
R24128:24128 LF.Logic <> x var
R24135:24135 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24149:24154 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24168:24168 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24136:24142 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24144:24145 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24146:24146 LF.Logic <> P var
R24148:24148 LF.Logic <> x var
R24155:24161 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24163:24164 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R24165:24165 LF.Logic <> Q var
R24167:24167 LF.Logic <> x var
def 25308:25309 <> In
R25327:25327 LF.Logic <> A var
R25335:25338 LF.Poly <> list ind
R25340:25340 LF.Logic <> A var
R25361:25361 LF.Logic <> l var
R25372:25373 LF.Poly <> :::'['_']' not
R25378:25382 Coq.Init.Logic <> False ind
R25390:25393 LF.Poly <> :::x_'::'_x not
R25406:25409 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25402:25404 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25405:25405 LF.Logic <> x var
R25410:25411 LF.Logic <> In def
R25413:25413 LF.Logic <> x var
def 25547:25558 <> In_example_1
R25562:25563 LF.Logic <> In def
R25567:25567 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25569:25570 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25572:25573 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25575:25576 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25578:25579 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25581:25581 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 25678:25689 <> In_example_2
R25716:25721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25722:25728 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25731:25732 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25734:25736 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25733:25733 LF.Logic <> n var
R25738:25740 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25741:25742 LF.Logic <> n' var
R25705:25706 LF.Logic <> In def
R25710:25710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25712:25713 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25715:25715 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R25708:25708 LF.Logic <> n var
prf 26207:26212 <> In_map
R26244:26247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26248:26248 LF.Logic <> B var
R26243:26243 LF.Logic <> A var
R26256:26259 LF.Poly <> list ind
R26261:26261 LF.Logic <> A var
R26269:26269 LF.Logic <> A var
R26283:26290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26291:26292 LF.Logic <> In def
R26301:26303 LF.Poly <> map def
R26307:26307 LF.Logic <> l var
R26305:26305 LF.Logic <> f var
R26295:26295 LF.Logic <> f var
R26297:26297 LF.Logic <> x var
R26277:26278 LF.Logic <> In def
R26282:26282 LF.Logic <> l var
R26280:26280 LF.Logic <> x var
prf 27062:27071 <> In_map_iff
R27103:27106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27107:27107 LF.Logic <> B var
R27102:27102 LF.Logic <> A var
R27115:27118 LF.Poly <> list ind
R27120:27120 LF.Logic <> A var
R27128:27128 LF.Logic <> B var
R27150:27158 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27136:27137 LF.Logic <> In def
R27142:27144 LF.Poly <> map def
R27148:27148 LF.Logic <> l var
R27146:27146 LF.Logic <> f var
R27139:27139 LF.Logic <> y var
R27159:27165 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27167:27168 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27176:27179 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27172:27174 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27169:27169 LF.Logic <> f var
R27171:27171 LF.Logic <> x var
R27175:27175 LF.Logic <> y var
R27180:27181 LF.Logic <> In def
R27185:27185 LF.Logic <> l var
R27183:27183 LF.Logic <> x var
R27820:27826 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27832:27833 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27841:27844 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27837:27839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27836:27836 LF.Logic <> x var
R27845:27846 LF.Logic <> In def
R27848:27848 LF.Logic <> x var
R27820:27826 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27832:27833 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27841:27844 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R27837:27839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27836:27836 LF.Logic <> x var
R27845:27846 LF.Logic <> In def
R27848:27848 LF.Logic <> x var
prf 28081:28090 <> In_app_iff
R28111:28111 LF.Logic <> A var
R28129:28133 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28117:28118 LF.Logic <> In def
R28124:28125 LF.Poly <> :::x_'++'_x not
R28123:28123 LF.Logic <> l var
R28126:28127 LF.Logic <> l' var
R28120:28120 LF.Logic <> a var
R28140:28143 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R28134:28135 LF.Logic <> In def
R28139:28139 LF.Logic <> l var
R28137:28137 LF.Logic <> a var
R28144:28145 LF.Logic <> In def
R28149:28150 LF.Logic <> l' var
R28147:28147 LF.Logic <> a var
def 29526:29528 <> All
R29547:29550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29546:29546 LF.Logic <> T var
R29562:29565 LF.Poly <> list ind
R29567:29567 LF.Logic <> T var
R29588:29588 LF.Logic <> l var
R29599:29600 LF.Poly <> :::'['_']' not
R29605:29608 Coq.Init.Logic <> True ind
R29615:29618 LF.Poly <> :::x_'::'_x not
R29627:29630 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R29624:29624 LF.Logic <> P var
R29631:29633 LF.Logic <> All def
R29635:29635 LF.Logic <> P var
prf 29655:29660 <> All_In
R29681:29684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29680:29680 LF.Logic <> T var
R29696:29699 LF.Poly <> list ind
R29701:29701 LF.Logic <> T var
R29709:29709 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29733:29742 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R29726:29729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29730:29730 LF.Logic <> P var
R29732:29732 LF.Logic <> x var
R29720:29721 LF.Logic <> In def
R29725:29725 LF.Logic <> l var
R29723:29723 LF.Logic <> x var
R29743:29745 LF.Logic <> All def
R29749:29749 LF.Logic <> l var
R29747:29747 LF.Logic <> P var
def 30648:30663 <> combine_odd_even
R30682:30685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30679:30681 Coq.Init.Datatypes <> nat ind
R30697:30700 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30694:30696 Coq.Init.Datatypes <> nat ind
R30719:30721 Coq.Init.Datatypes <> nat ind
R30730:30734 LF.Basics <> evenb def
R30736:30736 LF.Logic <> n var
R30756:30759 LF.Logic <> Podd var
R30761:30761 LF.Logic <> n var
R30743:30747 LF.Logic <> Peven var
R30749:30749 LF.Logic <> n var
prf 30838:30859 <> combine_odd_even_intro
R30889:30892 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30886:30888 Coq.Init.Datatypes <> nat ind
R30904:30906 Coq.Init.Datatypes <> nat ind
R30914:30914 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30938:30946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30947:30947 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30973:30981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30982:30997 LF.Logic <> combine_odd_even def
R31010:31010 LF.Logic <> n var
R31004:31008 LF.Logic <> Peven var
R30999:31002 LF.Logic <> Podd var
R30962:30965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30966:30970 LF.Logic <> Peven var
R30972:30972 LF.Logic <> n var
R30954:30956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30948:30951 LF.Basics <> oddb def
R30953:30953 LF.Logic <> n var
R30957:30961 LF.Basics <> false constr
R30928:30931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30932:30935 LF.Logic <> Podd var
R30937:30937 LF.Logic <> n var
R30921:30923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30915:30918 LF.Basics <> oddb def
R30920:30920 LF.Logic <> n var
R30924:30927 LF.Basics <> true constr
R31090:31105 LF.Logic <> combine_odd_even def
R31132:31135 LF.Basics <> oddb def
R31173:31188 LF.Logic <> combine_odd_even def
R31205:31209 LF.Basics <> evenb def
R31212:31212 Coq.Init.Datatypes <> S constr
R31205:31209 LF.Basics <> evenb def
R31212:31212 Coq.Init.Datatypes <> S constr
R31250:31253 LF.Basics <> oddb def
R31311:31314 LF.Basics <> oddb def
prf 31362:31386 <> combine_odd_even_elim_odd
R31416:31419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31413:31415 Coq.Init.Datatypes <> nat ind
R31431:31433 Coq.Init.Datatypes <> nat ind
R31470:31477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31491:31498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31499:31502 LF.Logic <> Podd var
R31504:31504 LF.Logic <> n var
R31484:31486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31478:31481 LF.Basics <> oddb def
R31483:31483 LF.Logic <> n var
R31487:31490 LF.Basics <> true constr
R31441:31456 LF.Logic <> combine_odd_even def
R31469:31469 LF.Logic <> n var
R31463:31467 LF.Logic <> Peven var
R31458:31461 LF.Logic <> Podd var
R31582:31585 LF.Basics <> oddb def
R31632:31647 LF.Logic <> combine_odd_even def
R31663:31666 LF.Basics <> oddb def
R31689:31693 LF.Basics <> evenb def
R31696:31696 Coq.Init.Datatypes <> S constr
R31689:31693 LF.Basics <> evenb def
R31696:31696 Coq.Init.Datatypes <> S constr
prf 31778:31803 <> combine_odd_even_elim_even
R31833:31836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31830:31832 Coq.Init.Datatypes <> nat ind
R31848:31850 Coq.Init.Datatypes <> nat ind
R31887:31894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31909:31916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31917:31921 LF.Logic <> Peven var
R31923:31923 LF.Logic <> n var
R31901:31903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31895:31898 LF.Basics <> oddb def
R31900:31900 LF.Logic <> n var
R31904:31908 LF.Basics <> false constr
R31858:31873 LF.Logic <> combine_odd_even def
R31886:31886 LF.Logic <> n var
R31880:31884 LF.Logic <> Peven var
R31875:31878 LF.Logic <> Podd var
R32001:32016 LF.Logic <> combine_odd_even def
R32061:32076 LF.Logic <> combine_odd_even def
R32095:32099 LF.Basics <> evenb def
R32102:32102 Coq.Init.Datatypes <> S constr
R32095:32099 LF.Basics <> evenb def
R32102:32102 Coq.Init.Datatypes <> S constr
R32149:32152 LF.Basics <> oddb def
R32992:32994 Coq.Init.Datatypes <> nat ind
R33002:33004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32998:33000 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32997:32997 LF.Logic <> n var
R33001:33001 LF.Logic <> m var
R33006:33008 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R33005:33005 LF.Logic <> m var
R33009:33009 LF.Logic <> n var
R32967:32975 LF.Induction <> plus_comm thm
prf 34349:34358 <> plus_comm3
R34389:34391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34379:34382 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34388:34388 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34378:34378 LF.Logic <> x var
R34384:34386 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34383:34383 LF.Logic <> y var
R34387:34387 LF.Logic <> z var
R34392:34392 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34398:34401 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34394:34396 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R34393:34393 LF.Logic <> z var
R34397:34397 LF.Logic <> y var
R34402:34402 LF.Logic <> x var
R34699:34707 LF.Induction <> plus_comm thm
R34699:34707 LF.Induction <> plus_comm thm
R34699:34707 LF.Induction <> plus_comm thm
R34720:34728 LF.Induction <> plus_comm thm
R34720:34728 LF.Induction <> plus_comm thm
R34720:34728 LF.Induction <> plus_comm thm
prf 35010:35025 <> plus_comm3_take2
R35056:35058 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35046:35049 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35055:35055 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35045:35045 LF.Logic <> x var
R35051:35053 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35050:35050 LF.Logic <> y var
R35054:35054 LF.Logic <> z var
R35059:35059 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35065:35068 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35061:35063 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35060:35060 LF.Logic <> z var
R35064:35064 LF.Logic <> y var
R35069:35069 LF.Logic <> x var
R35105:35113 LF.Induction <> plus_comm thm
R35105:35113 LF.Induction <> plus_comm thm
R35105:35113 LF.Induction <> plus_comm thm
R35135:35137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35131:35133 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35139:35141 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35135:35137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35131:35133 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35139:35141 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35158:35166 LF.Induction <> plus_comm thm
R35158:35166 LF.Induction <> plus_comm thm
R35158:35166 LF.Induction <> plus_comm thm
prf 35425:35440 <> plus_comm3_take3
R35471:35473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35461:35464 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35470:35470 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35460:35460 LF.Logic <> x var
R35466:35468 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35465:35465 LF.Logic <> y var
R35469:35469 LF.Logic <> z var
R35474:35474 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35480:35483 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35476:35478 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R35475:35475 LF.Logic <> z var
R35479:35479 LF.Logic <> y var
R35484:35484 LF.Logic <> x var
R35520:35528 LF.Induction <> plus_comm thm
R35520:35528 LF.Induction <> plus_comm thm
R35520:35528 LF.Induction <> plus_comm thm
R35542:35550 LF.Induction <> plus_comm thm
R35542:35550 LF.Induction <> plus_comm thm
R35542:35550 LF.Induction <> plus_comm thm
prf 35748:35757 <> in_not_nil
R35777:35777 LF.Logic <> A var
R35785:35788 LF.Poly <> list ind
R35790:35790 LF.Logic <> A var
R35800:35803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35805:35808 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R35804:35804 LF.Logic <> l var
R35809:35810 LF.Poly <> :::'['_']' not
R35794:35795 LF.Logic <> In def
R35799:35799 LF.Logic <> l var
R35797:35797 LF.Logic <> x var
R35845:35847 Coq.Init.Logic <> not def
prf 36240:36252 <> in_not_nil_42
R36269:36272 LF.Poly <> list ind
R36274:36276 Coq.Init.Datatypes <> nat ind
R36286:36289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36291:36294 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36290:36290 LF.Logic <> l var
R36295:36296 LF.Poly <> :::'['_']' not
R36279:36280 LF.Logic <> In def
R36285:36285 LF.Logic <> l var
R36333:36342 LF.Logic <> in_not_nil thm
R36333:36342 LF.Logic <> in_not_nil thm
prf 36443:36461 <> in_not_nil_42_take2
R36478:36481 LF.Poly <> list ind
R36483:36485 Coq.Init.Datatypes <> nat ind
R36495:36498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36500:36503 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36499:36499 LF.Logic <> l var
R36504:36505 LF.Poly <> :::'['_']' not
R36488:36489 LF.Logic <> In def
R36494:36494 LF.Logic <> l var
R36537:36546 LF.Logic <> in_not_nil thm
R36537:36546 LF.Logic <> in_not_nil thm
prf 36617:36635 <> in_not_nil_42_take3
R36652:36655 LF.Poly <> list ind
R36657:36659 Coq.Init.Datatypes <> nat ind
R36669:36672 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36674:36677 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36673:36673 LF.Logic <> l var
R36678:36679 LF.Poly <> :::'['_']' not
R36662:36663 LF.Logic <> In def
R36668:36668 LF.Logic <> l var
R36711:36720 LF.Logic <> in_not_nil thm
R36711:36720 LF.Logic <> in_not_nil thm
prf 36807:36825 <> in_not_nil_42_take4
R36842:36845 LF.Poly <> list ind
R36847:36849 Coq.Init.Datatypes <> nat ind
R36859:36862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36864:36867 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R36863:36863 LF.Logic <> l var
R36868:36869 LF.Poly <> :::'['_']' not
R36852:36853 LF.Logic <> In def
R36858:36858 LF.Logic <> l var
R36902:36911 LF.Logic <> in_not_nil thm
R36913:36915 Coq.Init.Datatypes <> nat ind
R36902:36911 LF.Logic <> in_not_nil thm
R36913:36915 Coq.Init.Datatypes <> nat ind
prf 36996:37014 <> in_not_nil_42_take5
R37031:37034 LF.Poly <> list ind
R37036:37038 Coq.Init.Datatypes <> nat ind
R37048:37051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37053:37056 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R37052:37052 LF.Logic <> l var
R37057:37058 LF.Poly <> :::'['_']' not
R37041:37042 LF.Logic <> In def
R37047:37047 LF.Logic <> l var
R37091:37100 LF.Logic <> in_not_nil thm
R37091:37100 LF.Logic <> in_not_nil thm
def 37690:37709 <> lemma_application_ex
R37727:37729 Coq.Init.Datatypes <> nat ind
R37738:37741 LF.Poly <> list ind
R37743:37745 Coq.Init.Datatypes <> nat ind
R37783:37790 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37792:37794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37791:37791 LF.Logic <> n var
R37753:37754 LF.Logic <> In def
R37759:37761 LF.Poly <> map def
R37780:37781 LF.Logic <> ns var
R37774:37776 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R37773:37773 LF.Logic <> m var
R37756:37756 LF.Logic <> n var
R37834:37838 LF.Logic <> proj1 thm
R37845:37854 LF.Logic <> In_map_iff thm
R37834:37838 LF.Logic <> proj1 thm
R37845:37854 LF.Logic <> In_map_iff thm
R37906:37913 LF.Induction <> mult_0_r thm
R37906:37913 LF.Induction <> mult_0_r thm
R37906:37913 LF.Induction <> mult_0_r thm
def 39803:39823 <> function_equality_ex1
R39829:39829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39844:39848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39870:39870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39840:39842 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R39843:39843 LF.Logic <> x var
R39858:39858 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R39865:39868 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R39859:39862 Coq.Init.Peano <> pred syndef
R39869:39869 LF.Logic <> x var
def 40611:40631 <> function_equality_ex2
R40637:40637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40655:40659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40677:40677 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40647:40650 Coq.Init.Peano <> plus syndef
R40652:40652 LF.Logic <> x var
R40669:40672 Coq.Init.Peano <> plus syndef
R40676:40676 LF.Logic <> x var
ax 40815:40839 <> functional_extensionality
R40906:40909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40910:40910 LF.Logic <> Y var
R40905:40905 LF.Logic <> X var
R40916:40916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40940:40944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40946:40948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40945:40945 LF.Logic <> f var
R40949:40949 LF.Logic <> g var
R40927:40927 LF.Logic <> X var
R40934:40936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40931:40931 LF.Logic <> f var
R40933:40933 LF.Logic <> x var
R40937:40937 LF.Logic <> g var
R40939:40939 LF.Logic <> x var
def 41259:41279 <> function_equality_ex2
R41285:41285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41303:41307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41325:41325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41295:41298 Coq.Init.Peano <> plus syndef
R41300:41300 LF.Logic <> x var
R41317:41320 Coq.Init.Peano <> plus syndef
R41324:41324 LF.Logic <> x var
R41343:41367 LF.Logic <> functional_extensionality prfax
R41343:41367 LF.Logic <> functional_extensionality prfax
R41388:41396 LF.Induction <> plus_comm thm
R41388:41396 LF.Induction <> plus_comm thm
R42102:42122 LF.Logic <> function_equality_ex2 ex
def 42676:42685 <> rev_append
R42700:42703 LF.Poly <> list ind
R42705:42705 LF.Logic <> X var
R42710:42713 LF.Poly <> list ind
R42715:42715 LF.Logic <> X var
R42728:42729 LF.Logic <> l1 var
R42740:42741 LF.Poly <> :::'['_']' not
R42746:42747 LF.Logic <> l2 var
R42754:42757 LF.Poly <> :::x_'::'_x not
R42765:42774 LF.Logic <> rev_append def
R42782:42785 LF.Poly <> :::x_'::'_x not
R42786:42787 LF.Logic <> l2 var
def 42809:42814 <> tr_rev
R42825:42828 LF.Poly <> list ind
R42830:42830 LF.Logic <> X var
R42835:42838 LF.Poly <> list ind
R42840:42840 LF.Logic <> X var
R42847:42856 LF.Logic <> rev_append def
R42860:42861 LF.Poly <> :::'['_']' not
R42858:42858 LF.Logic <> l var
prf 43231:43240 <> tr_rev_aux
R43263:43266 LF.Poly <> list ind
R43268:43268 LF.Logic <> X var
R43285:43287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43271:43280 LF.Logic <> rev_append def
R43284:43284 LF.Logic <> l var
R43282:43282 LF.Logic <> x var
R43288:43288 LF.Poly <> :::x_'++'_x not
R43294:43298 LF.Poly <> :::x_'++'_x not
R43289:43291 LF.Poly <> rev def
R43293:43293 LF.Logic <> x var
R43299:43299 LF.Logic <> l var
R43444:43452 LF.Poly <> app_nil_r thm
R43444:43452 LF.Poly <> app_nil_r thm
R43444:43452 LF.Poly <> app_nil_r thm
R43518:43526 LF.Poly <> app_assoc thm
R43518:43526 LF.Poly <> app_assoc thm
R43518:43526 LF.Poly <> app_assoc thm
prf 43566:43579 <> tr_rev_correct
R43602:43604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43594:43599 LF.Logic <> tr_rev def
R43601:43601 LF.Logic <> X var
R43606:43608 LF.Poly <> rev def
R43610:43610 LF.Logic <> X var
R43641:43646 LF.Logic <> tr_rev def
R43655:43679 LF.Logic <> functional_extensionality prfax
R43655:43679 LF.Logic <> functional_extensionality prfax
R43748:43757 LF.Logic <> tr_rev_aux thm
R43748:43757 LF.Logic <> tr_rev_aux thm
def 44185:44196 <> even_42_bool
R44208:44210 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44200:44204 LF.Basics <> evenb def
R44211:44214 LF.Basics <> true constr
def 44318:44329 <> even_42_prop
R44333:44336 LF.Logic <> even def
R44356:44359 LF.Logic <> even def
prf 44628:44639 <> evenb_double
R44669:44671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44653:44657 LF.Basics <> evenb def
R44660:44665 LF.Induction <> double def
R44667:44667 LF.Logic <> k var
R44672:44675 LF.Basics <> true constr
prf 44776:44781 <> auxaux
R44799:44801 Coq.Init.Datatypes <> nat ind
R44814:44817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44821:44823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44818:44818 Coq.Init.Datatypes <> S constr
R44820:44820 LF.Logic <> a var
R44824:44824 Coq.Init.Datatypes <> S constr
R44826:44826 LF.Logic <> b var
R44810:44812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44809:44809 LF.Logic <> a var
R44813:44813 LF.Logic <> b var
R44951:44957 LF.Induction <> evenb_S thm
prf 45028:45044 <> evenb_double_conv
R45058:45064 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R45066:45069 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R45071:45073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45070:45070 LF.Logic <> n var
R45077:45081 LF.Basics <> evenb def
R45083:45083 LF.Logic <> n var
R45104:45104 Coq.Init.Datatypes <> S constr
R45107:45112 LF.Induction <> double def
R45114:45114 LF.Logic <> k var
R45090:45095 LF.Induction <> double def
R45097:45097 LF.Logic <> k var
R45206:45212 LF.Induction <> evenb_S thm
R45206:45212 LF.Induction <> evenb_S thm
R45286:45290 LF.Basics <> evenb def
R45286:45290 LF.Basics <> evenb def
R45332:45334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45318:45321 LF.Basics <> negb def
R45324:45328 LF.Basics <> evenb def
R45335:45339 LF.Basics <> false constr
R45332:45334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45318:45321 LF.Basics <> negb def
R45324:45328 LF.Basics <> evenb def
R45335:45339 LF.Basics <> false constr
R45487:45493 LF.Tactics <> f_equal thm
R45487:45493 LF.Tactics <> f_equal thm
R45538:45540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45524:45527 LF.Basics <> negb def
R45530:45534 LF.Basics <> evenb def
R45541:45544 LF.Basics <> true constr
R45538:45540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45524:45527 LF.Basics <> negb def
R45530:45534 LF.Basics <> evenb def
R45541:45544 LF.Basics <> true constr
R45684:45684 Coq.Init.Datatypes <> S constr
R45684:45684 Coq.Init.Datatypes <> S constr
R45703:45709 LF.Tactics <> f_equal thm
R45703:45709 LF.Tactics <> f_equal thm
prf 45791:45804 <> even_bool_prop
R45834:45838 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45827:45829 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45820:45824 LF.Basics <> evenb def
R45826:45826 LF.Logic <> n var
R45830:45833 LF.Basics <> true constr
R45839:45842 LF.Logic <> even def
R45844:45844 LF.Logic <> n var
R45897:45913 LF.Logic <> evenb_double_conv thm
R45897:45913 LF.Logic <> evenb_double_conv thm
R46016:46027 LF.Logic <> evenb_double thm
R46016:46027 LF.Logic <> evenb_double thm
prf 46410:46415 <> eqb_eq
R46434:46436 Coq.Init.Datatypes <> nat ind
R46456:46460 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R46449:46451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46443:46446 LF.Basics <> ::nat_scope:x_'=?'_x not
R46441:46442 LF.Logic <> n1 var
R46447:46448 LF.Logic <> n2 var
R46452:46455 LF.Basics <> true constr
R46463:46465 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46461:46462 LF.Logic <> n1 var
R46466:46467 LF.Logic <> n2 var
R46510:46517 LF.Tactics <> eqb_true thm
R46510:46517 LF.Tactics <> eqb_true thm
R46556:46563 LF.Induction <> eqb_refl thm
R46556:46563 LF.Induction <> eqb_refl thm
R46556:46563 LF.Induction <> eqb_refl thm
def 47542:47554 <> is_even_prime
R47567:47569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47566:47566 LF.Logic <> n var
R47589:47593 LF.Basics <> false constr
R47577:47580 LF.Basics <> true constr
def 49164:49172 <> even_1000
R49176:49179 LF.Logic <> even def
R49288:49291 LF.Logic <> even def
def 49506:49515 <> even_1000'
R49529:49531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49519:49523 LF.Basics <> evenb def
R49532:49535 LF.Basics <> true constr
def 49758:49768 <> even_1000''
R49772:49775 LF.Logic <> even def
R49796:49809 LF.Logic <> even_bool_prop thm
R49796:49809 LF.Logic <> even_bool_prop thm
def 50367:50379 <> not_even_1001
R50393:50395 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50383:50387 LF.Basics <> evenb def
R50396:50400 LF.Basics <> false constr
def 50556:50569 <> not_even_1001'
R50573:50574 Coq.Init.Logic <> ::type_scope:'~'_x not
R50584:50584 Coq.Init.Logic <> ::type_scope:'~'_x not
R50575:50578 LF.Logic <> even def
R50631:50644 LF.Logic <> even_bool_prop thm
R50631:50644 LF.Logic <> even_bool_prop thm
R50631:50644 LF.Logic <> even_bool_prop thm
R50656:50658 Coq.Init.Logic <> not def
prf 51048:51063 <> plus_eqb_example
R51082:51084 Coq.Init.Datatypes <> nat ind
R51104:51107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51122:51124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51113:51116 LF.Basics <> ::nat_scope:x_'=?'_x not
R51109:51111 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R51108:51108 LF.Logic <> n var
R51112:51112 LF.Logic <> p var
R51118:51120 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R51117:51117 LF.Logic <> m var
R51121:51121 LF.Logic <> p var
R51125:51128 LF.Basics <> true constr
R51097:51099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51092:51095 LF.Basics <> ::nat_scope:x_'=?'_x not
R51091:51091 LF.Logic <> n var
R51096:51096 LF.Logic <> m var
R51100:51103 LF.Basics <> true constr
R51192:51197 LF.Logic <> eqb_eq thm
R51192:51197 LF.Logic <> eqb_eq thm
R51192:51197 LF.Logic <> eqb_eq thm
R51228:51233 LF.Logic <> eqb_eq thm
R51228:51233 LF.Logic <> eqb_eq thm
R51228:51233 LF.Logic <> eqb_eq thm
prf 51767:51779 <> andb_true_iff
R51796:51799 LF.Basics <> bool ind
R51819:51823 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51812:51814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51806:51809 LF.Basics <> :::x_'&&'_x not
R51804:51805 LF.Logic <> b1 var
R51810:51811 LF.Logic <> b2 var
R51815:51818 LF.Basics <> true constr
R51833:51836 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R51826:51828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51824:51825 LF.Logic <> b1 var
R51829:51832 LF.Basics <> true constr
R51839:51841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51837:51838 LF.Logic <> b2 var
R51842:51845 LF.Basics <> true constr
prf 52466:52477 <> orb_true_iff
R52512:52516 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52505:52507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52499:52502 LF.Basics <> :::x_'||'_x not
R52497:52498 LF.Logic <> b1 var
R52503:52504 LF.Logic <> b2 var
R52508:52511 LF.Basics <> true constr
R52526:52529 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52519:52521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52517:52518 LF.Logic <> b1 var
R52522:52525 LF.Basics <> true constr
R52532:52534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52530:52531 LF.Logic <> b2 var
R52535:52538 LF.Basics <> true constr
R53098:53115 LF.Logic <> not_true_iff_false thm
prf 53127:53133 <> eqb_neq
R53150:53152 Coq.Init.Datatypes <> nat ind
R53171:53175 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R53163:53165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53158:53161 LF.Basics <> ::nat_scope:x_'=?'_x not
R53157:53157 LF.Logic <> x var
R53162:53162 LF.Logic <> y var
R53166:53170 LF.Basics <> false constr
R53177:53180 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R53176:53176 LF.Logic <> x var
R53181:53181 LF.Logic <> y var
R53388:53405 LF.Logic <> not_true_iff_false thm
R53388:53405 LF.Logic <> not_true_iff_false thm
R53458:53460 Coq.Init.Logic <> not def
R53480:53485 LF.Logic <> eqb_eq thm
R53480:53485 LF.Logic <> eqb_eq thm
R53556:53573 LF.Logic <> not_true_iff_false thm
R53556:53573 LF.Logic <> not_true_iff_false thm
R53583:53585 Coq.Init.Logic <> not def
R53595:53597 Coq.Init.Logic <> not def
R53635:53640 LF.Logic <> eqb_eq thm
R53635:53640 LF.Logic <> eqb_eq thm
def 54071:54078 <> eqb_list
R54099:54102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54104:54107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54108:54111 LF.Basics <> bool ind
R54103:54103 LF.Logic <> A var
R54098:54098 LF.Logic <> A var
R54132:54135 LF.Poly <> list ind
R54137:54137 LF.Logic <> A var
R54142:54145 LF.Basics <> bool ind
R54162:54163 LF.Logic <> l2 var
R54158:54159 LF.Logic <> l1 var
R54176:54177 LF.Poly <> :::'['_']' not
R54180:54181 LF.Poly <> :::'['_']' not
R54186:54189 LF.Basics <> true constr
R54197:54198 LF.Poly <> :::'['_']' not
R54203:54206 LF.Poly <> :::x_'::'_x not
R54213:54217 LF.Basics <> false constr
R54227:54230 LF.Poly <> :::x_'::'_x not
R54235:54236 LF.Poly <> :::'['_']' not
R54241:54245 LF.Basics <> false constr
R54255:54258 LF.Poly <> :::x_'::'_x not
R54265:54268 LF.Poly <> :::x_'::'_x not
R54275:54275 LF.Basics <> :::x_'&&'_x not
R54285:54290 LF.Basics <> :::x_'&&'_x not
R54309:54309 LF.Basics <> :::x_'&&'_x not
R54276:54278 LF.Logic <> eqb var
R54291:54298 LF.Logic <> eqb_list def
R54300:54302 LF.Logic <> eqb var
prf 54327:54338 <> eqb_list_aux
R54365:54365 LF.Logic <> A var
R54377:54380 LF.Poly <> list ind
R54382:54382 LF.Logic <> A var
R54395:54398 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54399:54399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54407:54411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54419:54419 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54401:54404 LF.Poly <> :::x_'::'_x not
R54400:54400 LF.Logic <> h var
R54405:54406 LF.Logic <> l1 var
R54413:54416 LF.Poly <> :::x_'::'_x not
R54412:54412 LF.Logic <> h var
R54417:54418 LF.Logic <> l2 var
R54390:54392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54388:54389 LF.Logic <> l1 var
R54393:54394 LF.Logic <> l2 var
prf 54653:54665 <> eqb_list_aux2
R54696:54696 LF.Logic <> A var
R54708:54711 LF.Poly <> list ind
R54713:54713 LF.Logic <> A var
R54738:54741 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54749:54752 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R54744:54746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54742:54743 LF.Logic <> h1 var
R54747:54748 LF.Logic <> h2 var
R54755:54757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54753:54754 LF.Logic <> l1 var
R54758:54759 LF.Logic <> l2 var
R54727:54729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54721:54724 LF.Poly <> :::x_'::'_x not
R54719:54720 LF.Logic <> h1 var
R54725:54726 LF.Logic <> l1 var
R54732:54735 LF.Poly <> :::x_'::'_x not
R54730:54731 LF.Logic <> h2 var
R54736:54737 LF.Logic <> l2 var
prf 55179:55195 <> eqb_list_true_iff
R55218:55221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55223:55226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55227:55230 LF.Basics <> bool ind
R55222:55222 LF.Logic <> A var
R55217:55217 LF.Logic <> A var
R55238:55238 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55281:55289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55329:55333 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R55322:55324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55304:55311 LF.Logic <> eqb_list def
R55320:55321 LF.Logic <> l2 var
R55317:55318 LF.Logic <> l1 var
R55313:55315 LF.Logic <> eqb var
R55325:55328 LF.Basics <> true constr
R55336:55338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55334:55335 LF.Logic <> l1 var
R55339:55340 LF.Logic <> l2 var
R55269:55273 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R55262:55264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55253:55255 LF.Logic <> eqb var
R55260:55261 LF.Logic <> a2 var
R55257:55258 LF.Logic <> a1 var
R55265:55268 LF.Basics <> true constr
R55276:55278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55274:55275 LF.Logic <> a1 var
R55279:55280 LF.Logic <> a2 var
R55772:55783 LF.Logic <> eqb_list_aux thm
R55772:55783 LF.Logic <> eqb_list_aux thm
R55898:55910 LF.Logic <> eqb_list_aux2 thm
R55898:55910 LF.Logic <> eqb_list_aux2 thm
def 56251:56257 <> forallb
R56279:56282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56283:56286 LF.Basics <> bool ind
R56278:56278 LF.Logic <> X var
R56294:56297 LF.Poly <> list ind
R56299:56299 LF.Logic <> X var
R56304:56307 LF.Basics <> bool ind
R56320:56320 LF.Logic <> l var
R56331:56332 LF.Poly <> :::'['_']' not
R56337:56340 LF.Basics <> true constr
R56347:56350 LF.Poly <> :::x_'::'_x not
R56357:56360 LF.Basics <> andb def
R56372:56378 LF.Logic <> forallb def
R56380:56383 LF.Logic <> test var
R56363:56366 LF.Logic <> test var
prf 56503:56518 <> forallb_true_iff
R56541:56544 LF.Poly <> list ind
R56546:56546 LF.Logic <> X var
R56574:56578 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R56567:56569 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56553:56559 LF.Logic <> forallb def
R56566:56566 LF.Logic <> l var
R56561:56564 LF.Logic <> test var
R56570:56573 LF.Basics <> true constr
R56579:56581 LF.Logic <> All def
R56608:56608 LF.Logic <> l var
R56599:56601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56593:56596 LF.Logic <> test var
R56598:56598 LF.Logic <> x var
R56602:56605 LF.Basics <> true constr
R56758:56761 LF.Basics <> andb def
def 57868:57882 <> excluded_middle
R57907:57910 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R57906:57906 LF.Logic <> P var
R57911:57912 Coq.Init.Logic <> ::type_scope:'~'_x not
R57913:57913 LF.Logic <> P var
prf 58673:58698 <> restricted_excluded_middle
R58716:58716 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58731:58735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58737:58740 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58736:58736 LF.Logic <> P var
R58741:58742 Coq.Init.Logic <> ::type_scope:'~'_x not
R58743:58743 LF.Logic <> P var
R58718:58722 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R58717:58717 LF.Logic <> P var
R58724:58726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58723:58723 LF.Logic <> b var
R58727:58730 LF.Basics <> true constr
prf 58992:59020 <> restricted_excluded_middle_eq
R59038:59040 Coq.Init.Datatypes <> nat ind
R59051:59054 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59047:59049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59046:59046 LF.Logic <> n var
R59050:59050 LF.Logic <> m var
R59056:59059 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R59055:59055 LF.Logic <> n var
R59060:59060 LF.Logic <> m var
R59093:59118 LF.Logic <> restricted_excluded_middle thm
R59130:59133 LF.Basics <> ::nat_scope:x_'=?'_x not
R59122:59124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59093:59118 LF.Logic <> restricted_excluded_middle thm
R59130:59133 LF.Basics <> ::nat_scope:x_'=?'_x not
R59122:59124 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59159:59164 LF.Logic <> eqb_eq thm
R59159:59164 LF.Logic <> eqb_eq thm
prf 63626:63652 <> excluded_middle_irrefutable
R63674:63675 Coq.Init.Logic <> ::type_scope:'~'_x not
R63676:63678 Coq.Init.Logic <> ::type_scope:'~'_x not
R63687:63687 Coq.Init.Logic <> ::type_scope:'~'_x not
R63680:63683 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R63679:63679 LF.Logic <> P var
R63684:63685 Coq.Init.Logic <> ::type_scope:'~'_x not
R63686:63686 LF.Logic <> P var
R63706:63708 Coq.Init.Logic <> not def
prf 64228:64242 <> not_exists_dist
R64263:64268 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64291:64294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64290:64290 LF.Logic <> X var
R64325:64329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64343:64343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64340:64340 LF.Logic <> P var
R64342:64342 LF.Logic <> x var
R64306:64308 Coq.Init.Logic <> ::type_scope:'~'_x not
R64324:64324 Coq.Init.Logic <> ::type_scope:'~'_x not
R64309:64315 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64317:64318 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64319:64320 Coq.Init.Logic <> ::type_scope:'~'_x not
R64321:64321 LF.Logic <> P var
R64323:64323 LF.Logic <> x var
R64248:64262 LF.Logic <> excluded_middle def
R64362:64376 LF.Logic <> excluded_middle def
R64405:64407 Coq.Init.Logic <> not def
R64425:64427 Coq.Init.Logic <> not def
def 65246:65251 <> peirce
R65276:65276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65286:65288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65289:65289 LF.Logic <> P var
R65277:65277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65282:65284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65285:65285 LF.Logic <> P var
R65279:65280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65281:65281 LF.Logic <> Q var
R65278:65278 LF.Logic <> P var
def 65304:65330 <> double_negation_elimination
R65355:65358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65359:65359 LF.Logic <> P var
R65352:65352 Coq.Init.Logic <> ::type_scope:'~'_x not
R65353:65353 Coq.Init.Logic <> ::type_scope:'~'_x not
R65354:65354 LF.Logic <> P var
def 65374:65394 <> de_morgan_not_and_not
R65429:65432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65434:65435 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R65433:65433 LF.Logic <> P var
R65436:65436 LF.Logic <> Q var
R65418:65419 Coq.Init.Logic <> ::type_scope:'~'_x not
R65428:65428 Coq.Init.Logic <> ::type_scope:'~'_x not
R65422:65425 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R65420:65420 Coq.Init.Logic <> ::type_scope:'~'_x not
R65421:65421 LF.Logic <> P var
R65426:65426 Coq.Init.Logic <> ::type_scope:'~'_x not
R65427:65427 LF.Logic <> Q var
def 65451:65463 <> implies_to_or
R65489:65489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65494:65499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65505:65505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65502:65503 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R65500:65500 Coq.Init.Logic <> ::type_scope:'~'_x not
R65501:65501 LF.Logic <> P var
R65504:65504 LF.Logic <> Q var
R65491:65492 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65493:65493 LF.Logic <> Q var
R65490:65490 LF.Logic <> P var
prf 65515:65544 <> double_negation_implies_peirce
R65578:65581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65583:65588 LF.Logic <> peirce def
R65551:65577 LF.Logic <> double_negation_elimination def
R65617:65643 LF.Logic <> double_negation_elimination def
R65660:65665 LF.Logic <> peirce def
prf 65763:65787 <> de_morgan_implies_implies
R65816:65819 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65821:65833 LF.Logic <> implies_to_or def
R65795:65815 LF.Logic <> de_morgan_not_and_not def
R65863:65883 LF.Logic <> de_morgan_not_and_not def
R65901:65913 LF.Logic <> implies_to_or def
R65949:65951 Coq.Init.Logic <> not def
prf 66061:66091 <> implies_implies_double_negation
R66111:66114 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66116:66142 LF.Logic <> double_negation_elimination def
R66098:66110 LF.Logic <> implies_to_or def
R66173:66185 LF.Logic <> implies_to_or def
R66204:66230 LF.Logic <> double_negation_elimination def
R66248:66250 Coq.Init.Logic <> not def
